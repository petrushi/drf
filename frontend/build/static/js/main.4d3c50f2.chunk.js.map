{"version":3,"sources":["components/Menu.js","components/Footer.js","components/User.js","components/Project.js","components/TodoItem.js","components/Todo.js","components/ProjectTodos.js","components/UserInfo.js","components/auth.js","components/ProjectForm.js","components/TodoForm.js","components/NotFound404.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","this","props","setToken","className","to","isAuthed","username","onClick","logout","style","React","Component","Footer","UserItem","user","id","first_name","last_name","email","UserList","users","map","ProjectItem","project","deleteProject","name","href","link","reduce","prev","curr","type","ProjectList","params","handleInputChange","e","setState","target","value","filteredProjects","projects","filter","toLowerCase","includes","state","placeholder","onChange","TodoItem","todo","deleteTodo","text","author","createdAt","isActive","toString","TodoList","todos","ProjectTodoList","useParams","filteredTodos","UserInfo","LoginForm","event","getToken","login","password","preventDefault","onSubmit","handleSubmit","handleChange","ProjectForm","selectedOptions","i","length","push","item","createProject","htmlFor","handleUserChange","multiple","TodoForm","createTodo","default","NotFound404","location","pathname","App","headers","getHeaders","data","axios","post","then","response","loadData","catch","error","console","log","projectTodos","delete","get","results","token","Cookies","set","isAuth","getTokenFromStorage","exact","path","component","User","Project","Todo","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d3c50f2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Menu extends React.Component {\n\n    logout() {\n        this.props.setToken('')\n    }\n\n    render() {\n        return (\n            <nav className='menu'>\n                <li><Link to='/'>Users</Link></li>\n                <li><Link to='/projects'>Projects</Link></li>\n                <li><Link to='/todos'>Todos</Link></li>\n                {this.props.isAuthed ?\n                    <div>\n                        <span>{this.props.username}</span><br></br>\n                        <button onClick={() => this.logout()}> Logout</button>\n                    </div> :\n                    <li style={{ 'backgroundColor': 'red' }}><Link to='/login'>Login</Link></li>}\n            </nav>\n        )\n    }\n}\n\nexport default Menu;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className='footer'>\n            Footer\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst UserItem = ({ user }) => {\n    return (\n        <tr>\n            <td>\n                <Link to={`users/${user.id}`}>{user.username}</Link>\n            </td>\n            <td>\n                {user.first_name}\n            </td>\n            <td>\n                {user.last_name}\n            </td>\n            <td>\n                {user.email}\n            </td>\n        </tr>\n    )\n}\n\nconst UserList = ({ users }) => {\n    return (\n        <div className='users table'>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Username</th>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((user) => <UserItem user={user} />)}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UserList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectItem = ({ project, deleteProject }) => {\n    return (\n        <tr>\n            <td>\n                <Link to={`projects/${project.id}`}>\n                    {project.name}\n                </Link>\n            </td>\n            <td>\n                <a href={project.link}>{project.link}</a>\n            </td>\n            <td>\n                {project.users.map(user => {\n                    return (\n                        <Link to={`users/${user}`}>\n                            {user}\n                        </Link>\n                    )\n                }).reduce((prev, curr) => [prev, ' ', curr], '')}\n            </td>\n            <td>\n                <button onClick={() => deleteProject(project.id)} type='button'>Delete</button>\n            </td>\n        </tr>\n    )\n}\nclass ProjectList extends React.Component {\n    constructor(params) {\n        super(params);\n        this.state = { 'searchLine': '', 'projects': this.props.projects }\n    }\n    handleInputChange = e => {\n        this.setState({ 'searchLine': e.target.value })\n        let filteredProjects = this.props.projects.filter(project => {\n            return project.name.toLowerCase().includes(e.target.value.toLowerCase())\n        })\n        this.setState({'projects': filteredProjects})\n    }\n    render() {\n        return (\n            <div className='projects table'>\n                <div className=\"searchForm\">\n                    <form>\n                        <input type=\"text\" id=\"filter\" placeholder=\"Search for...\" onChange={this.handleInputChange} />\n                    </form>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Link</th>\n                            <th>Users</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.projects.map((project) => <ProjectItem project={project} deleteProject={this.props.deleteProject} />)}\n                    </tbody>\n                </table>\n                <div>\n                    <Link to='projects/create'>Create project</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectList;\n","import { Link } from 'react-router-dom';\n\n\nconst TodoItem = ({ todo, deleteTodo }) => {\n    return (\n        <tr>\n            <td>\n                {todo.text}\n            </td>\n            <td>\n                <Link to={`/users/${todo.author}`}>\n                    {todo.author}\n                </Link>\n            </td>\n            <td>\n                <Link to={`/projects/${todo.project}`}>\n                    {todo.project}\n                </Link>\n            </td>\n            <td>\n                {todo.createdAt}\n            </td>\n            <td>\n                {todo.isActive.toString()}\n            </td>\n            <td>\n                <button onClick={() => deleteTodo(todo.id)} type='button'>Delete</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { Link } from 'react-router-dom';\n\nconst TodoList = ({ todos, deleteTodo }) => {\n    return (\n        <div className='todos table'>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Text</th>\n                        <th>Author</th>\n                        <th>Project</th>\n                        <th>Created date</th>\n                        <th>Is active</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {todos.map((todo) => <TodoItem todo={todo}  deleteTodo={(id) => deleteTodo(id)}/>)}\n                </tbody>\n            </table>\n            <div>\n                <Link to='todos/create'>Create ToDo</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoList;\n","import TodoItem from \"./TodoItem\";\nimport { useParams } from 'react-router-dom';\n\n\nconst ProjectTodoList = ({ todos }) => {\n    let { id } = useParams();\n    let filteredTodos = todos.filter(todo => todo.project.toString().includes(id))\n    return (\n        <div className='todos table'>\n            <h2>List of ToDos for Project {id}</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Text</th>\n                        <th>Author</th>\n                        <th>Project</th>\n                        <th>Created at</th>\n                        <th>Is active</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {filteredTodos.map((todo) => <TodoItem todo={todo} />)}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ProjectTodoList;\n","import { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst UserInfo = ({ todos, projects }) => {\n    let { id } = useParams();\n    let filteredTodos = todos.filter(todo => todo.author.toString().includes(id))\n    let filteredProjects = projects.filter(project => project.users.toString().includes(id))\n    return (\n        <div className='todos table'>\n            <h2> User {id} activity </h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Projects</th>\n                        <th>Todos</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            {filteredProjects.map(project => {\n                                return (\n                                    <Link to={`/projects/${project.id}`}>\n                                        {project.name}\n                                    </Link>\n                                )\n                            }).reduce((prev, curr) => [prev, ' ', curr], '')}\n                        </td>\n                        <td>{filteredTodos.map(todo => {\n                            return (\n                                <div>{todo.text}</div>\n                            )\n                        })}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UserInfo;","import React from 'react';\n\n\nclass LoginForm extends React.Component {\n    constructor(params) {\n        super(params);\n        this.state = { 'login': '', 'password': '' }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        this.props.getToken(this.state.login, this.state.password)\n        event.preventDefault()\n    }\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\n                    onChange={(event) => this.handleChange(event)} />\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\n                    onChange={(event) => this.handleChange(event)} />\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n        );\n    }\n}\n\nexport default LoginForm\n","import React from 'react';\n\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { 'name': '', 'link': '', 'users': [props.users] }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleUserChange(event) {\n\n        if (!event.target.selectedOptions) {\n            this.setState({\n                'users': []\n            })\n            return;\n        }\n        let users = []\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\n            users.push(event.target.selectedOptions.item(i).value)\n        }\n        this.setState({\n            'users': users\n        })\n\n    }\n    handleSubmit(event) {\n        this.props.createProject(this.state.name, this.state.link, this.state.users)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">name</label>\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name}\n                        onChange={(event) => this.handleChange(event)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"link\">link</label>\n                    <input type=\"text\" className=\"form-control\" name=\"link\" value={this.state.link}\n                        onChange={(event) => this.handleChange(event)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"users\">users</label>\n\n                    <select name=\"users\" className='form-control'\n                        onChange={(event) => this.handleUserChange(event)} multiple>\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\n                    </select>\n\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\n            </form>\n        );\n    }\n}\n\nexport default ProjectForm\n","import React from 'react';\n\n\nclass TodoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { 'text': '', 'project': props.projects, 'author': props.users, 'isActive': false }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        this.props.createTodo(this.state.text, this.state.project, this.state.author, this.state.isActive)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"text\">text</label>\n                    <input type=\"text\" className=\"form-control\" name=\"text\" value={this.state.text}\n                        onChange={(event) => this.handleChange(event)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"project\">project</label>\n                    <select name=\"project\" className='form-control'\n                        onChange={(event) => this.handleChange(event)}>\n                        {this.props.projects.map((item) => <option value={item.id}>{item.name}</option>)}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"author\">author</label>\n\n                    <select name=\"author\" className='form-control'\n                        onChange={(event) => this.handleChange(event)}>\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\n                    </select>\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"isActive\">is active</label>\n                    <input type=\"checkbox\" default={true} className=\"form-control\" name=\"isActive\" value={this.state.isActive}\n                        onChange={() => this.setState(({ isActive }) => ({ isActive: !isActive }))}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\n            </form>\n        );\n    }\n}\n\nexport default TodoForm\n","const NotFound404 = ({ location }) => {\n\n    return (\n        <div className='table'>\n            <h2>Страница по адресу '{location.pathname}'не найдена</h2>\n        </div>\n    )\n}\n\n\nexport default NotFound404;","import React from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport './App.css';\nimport Menu from './components/Menu'\nimport Footer from './components/Footer';\nimport UserList from './components/User';\nimport ProjectList from './components/Project';\nimport TodoList from './components/Todo';\nimport ProjectTodoList from './components/ProjectTodos'\nimport UserInfo from './components/UserInfo';\nimport LoginForm from './components/auth';\nimport ProjectForm from './components/ProjectForm'\nimport TodoForm from './components/TodoForm';\nimport NotFound404 from './components/NotFound404';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'token': '',\n            'username': '',\n        }\n    }\n    createProject(name, link, users) {\n        const headers = this.getHeaders()\n        const data = { name: name, link: link, users: users }\n        axios.post(`http://127.0.0.1:8000/api/projects/?version=2`, data, { headers })\n            .then(response => {\n                // let newProject = response.data\n                // let users = this.state.users.filter((item) => item.id == newProject.users)[0]\n                // newProject.users = users\n                // this.setState({ projects: [...this.state.projects, newProject] })\n                this.loadData()\n            }).catch(error => {\n                console.log(error)\n                this.setState({ 'projects': [] })\n            })\n    }\n    createTodo(text, project, author, isActive) {\n\n        if (typeof project !== 'string') {\n            project = project[0].id\n        }\n        if (typeof author !== 'string') {\n\n            author = author[0].id\n        }\n        const headers = this.getHeaders()\n        const data = { text: text, project: project, author: author, isActive: isActive }\n        axios.post(`http://127.0.0.1:8000/api/todos/?version=2`, data, { headers })\n            .then(response => {\n                // let newProject = response.data\n                // let users = this.state.users.filter((item) => item.id == newProject.users)[0]\n                // newProject.users = users\n                // this.setState({ projects: [...this.state.projects, newProject] })\n                this.loadData()\n            }).catch(error => {\n                console.log(error)\n                this.setState({ 'todos': [] })\n            })\n    }\n\n    deleteProject(id) {\n        const headers = this.getHeaders()\n        let projectTodos = this.state.todos.filter(todo => todo.project == id)\n        for (let todo of projectTodos) {\n            this.deleteTodo(todo.id)\n        }\n        axios.delete(`http://127.0.0.1:8000/api/projects/${id}`, { headers })\n            .then(response => {\n                // this.setState({ 'projects': this.state.projects.filter((item) => item.id !== id) })\n                this.loadData()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    deleteTodo(id) {\n        const headers = this.getHeaders()\n        axios.delete(`http://127.0.0.1:8000/api/todos/${id}`, { headers })\n            .then(response => {\n                this.loadData()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n    loadData() {\n        const headers = this.getHeaders()\n        axios.get('http://127.0.0.1:8000/api/users/?version=2', { headers })\n            .then(response => {\n                const users = response.data\n                this.setState({ 'users': users.results })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ 'users': [] })\n            })\n\n        axios.get('http://127.0.0.1:8000/api/projects/?version=2', { headers })\n            .then(response => {\n                const projects = response.data\n                this.setState({ 'projects': projects.results })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ 'projects': [] })\n            })\n        axios.get('http://127.0.0.1:8000/api/todos/?version=2', { headers })\n            .then(response => {\n                const todos = response.data\n                this.setState({ 'todos': todos.results })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ 'todos': [] })\n            })\n    }\n\n    isAuth() {\n        return !!this.state.token\n    }\n\n    setToken(token) {\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        this.setState({ 'token': token }, () => this.loadData())\n    }\n\n    getToken(username, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/', { 'username': username, 'password': password })\n            .then(response => {\n                this.setToken(response.data['token'])\n                this.setState({ 'username': username })\n\n            }).catch(error => console.log(error))\n    }\n\n    getTokenFromStorage() {\n\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        this.setState({ 'token': token }, () => this.loadData())\n\n    }\n\n    getHeaders() {\n        let headers = {\n            'Content-Type': 'application/json',\n        }\n        if (this.isAuth()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n    componentDidMount() {\n        this.getTokenFromStorage()\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div className='main'>\n                    <BrowserRouter>\n                        <Menu username={this.state.username}\n                            isAuthed={this.isAuth()} setToken={(token) => this.setToken(token)}>\n                        </Menu>\n\n                        <Switch>\n                            <Route exact path='/' component={() => <UserList users={this.state.users} />} />\n\n                            <Route path='/users/:id'>\n                                <UserInfo todos={this.state.todos} projects={this.state.projects} />\n                            </Route>\n                            <Route exact path='/projects/create'\n                                component={() =>\n                                    <ProjectForm users={this.state.users}\n                                        createProject={(name, link, users) => this.createProject(name, link, users)}\n                                    />} />\n                            <Route exact path='/todos/create'\n                                component={() =>\n                                    <TodoForm users={this.state.users} projects={this.state.projects}\n                                        createTodo={(text, project, author, isActive) => this.createTodo(text, project, author, isActive)}\n                                    />} />\n                            <Route exact path='/projects'\n                                component={() =>\n                                    <ProjectList projects={this.state.projects}\n                                        deleteProject={(id) => this.deleteProject(id)}\n                                    />}\n                            />\n                            <Route path='/projects/:id'>\n                                <ProjectTodoList todos={this.state.todos} />\n                            </Route>\n\n                            <Route exact path='/login' component={() =>\n                                <LoginForm getToken={(username, password) => this.getToken(username, password)} />} />\n\n                            <Route exact path='/todos' component={() => <TodoList todos={this.state.todos} deleteTodo={(id) => this.deleteTodo(id)} />} />\n                            <Redirect from='/users' to='/' />\n\n                            <Route component={NotFound404} />\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n                <Footer></Footer>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}